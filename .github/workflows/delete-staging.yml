name: Deletes Staging Environment After Testing Period

on:
    push:
        branches: ["staging"]

jobs:
  delete:
    name: Deletes Staging Environment After Testing Period
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    env:
      TF_WORKSPACE: 'staging'
    
    steps:
      - name: Sleep for 1800 minutes
        run: sleep 1800s
        shell: bash

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
          
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}        
      
          # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
      
        # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false -destroy
      
        # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -destroy

            